# Generated by Django 4.2.7 on 2024-12-19 11:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('locations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('picture', models.URLField(blank=True, null=True)),
                ('mobile_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='mobile number')),
                ('nid_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='nid no')),
                ('date_of_birth', models.CharField(blank=True, max_length=200, null=True, verbose_name='date of birth')),
                ('birth_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='birth no')),
                ('father_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='father name')),
                ('father_nid_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='father nid no')),
                ('mother_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='mother name')),
                ('mother_nid_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='mother nid no')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('others', 'Others')], max_length=10, null=True, verbose_name='gender')),
                ('religion', models.CharField(blank=True, max_length=10, null=True, verbose_name='relgion')),
                ('email_verified', models.BooleanField(default=False, verbose_name='email verified')),
                ('mobile_verified', models.BooleanField(default=False, verbose_name='mobile verified')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserPermanentAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('living_place', models.CharField(max_length=200, verbose_name='living place')),
                ('holding_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='holding no')),
                ('ward_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='ward no')),
                ('road_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='road no')),
                ('location', models.CharField(max_length=200, verbose_name='location')),
                ('located', models.CharField(choices=[('city corporation', 'City Corporation'), ('zila parishad', 'Zila Parishad'), ('upazila parishad', 'Upzila Parishad'), ('union parishad', 'Union Parishad')], max_length=20, verbose_name='connected')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='locations.district', verbose_name='district')),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='locations.division', verbose_name='division')),
                ('union', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='locations.union', verbose_name='union')),
                ('upazila', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='locations.upazila', verbose_name='upazila')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='permanent_address', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user permanent address',
                'verbose_name_plural': 'user permanent addresses',
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('mobile_number',), name='unique_user_mobile_number'),
        ),
    ]
